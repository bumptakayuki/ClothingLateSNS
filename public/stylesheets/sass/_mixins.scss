// ***************************************
// Mixins
// ***************************************

// Clearfix
// --------
@mixin clearfix {
  &::before,
  &::after {
    display: table;
    content: ' ';
  }
  &::after { clear: both; }
}

// List options
// ------------
@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}

// Block paddings classes
// ----------------------
@mixin block-padding-top($from: 1, $to: 10) {
  @for $i from $from through $to {
    .padding-top-#{$i}x {
      padding-top: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        padding-top: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}
@mixin block-padding-bottom($from: 1, $to: 10) {
  @for $i from $from through $to {
    .padding-bottom-#{$i}x {
      padding-bottom: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        padding-bottom: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}
@mixin block-padding-left($from: 1, $to: 10) {
  @for $i from $from through $to {
    .padding-left-#{$i}x {
      padding-left: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        padding-left: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}
@mixin block-padding-right($from: 1, $to: 10) {
  @for $i from $from through $to {
    .padding-right-#{$i}x {
      padding-right: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        padding-right: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}

// Block margins classes
// ---------------------
@mixin block-margin-top($from: 1, $to: 10) {
  @for $i from $from through $to {
    .margin-top-#{$i}x {
      margin-top: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        margin-top: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}
@mixin block-margin-bottom($from: 1, $to: 10) {
  @for $i from $from through $to {
    .margin-bottom-#{$i}x {
      margin-bottom: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        margin-bottom: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}
@mixin block-margin-left($from: 1, $to: 10) {
  @for $i from $from through $to {
    .margin-left-#{$i}x {
      margin-left: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        margin-left: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}
@mixin block-margin-right($from: 1, $to: 10) {
  @for $i from $from through $to {
    .margin-right-#{$i}x {
      margin-right: floor($grid-vertical-step * $i);
      @media #{$tablet-port} {
        margin-right: floor(($grid-vertical-step * $i) / 1.5);
      }
    }
  }
}

// Block margins none
// ------------------
@mixin block-space-none($space, $position) {
  .#{$space}-#{$position}-none {
    #{$space}-#{$position}: 0 !important;
  }
}

// Background variants
// -------------------
@mixin bg-variant($color, $background) {
  background-color: $background;
  color: $color;
}

// Button Variants
// ---------------
@mixin btn-variant($border-color, $border-opacity) {
  border-color: rgba($border-color, $border-opacity);
}

// Center vertically and/or horizontally an absolute positioned element
// --------------------------------------------------------------------
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translate(-50%, -50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    transform: translateX(-50%);
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    transform: translateY(-50%);
  }
}
